 Promise = function(t) {
    function n(o) {
        if (e[o]) return e[o].exports;
        var r = e[o] = {
            exports: {},
            id: o,
            loaded: !1
        };
        return t[o].call(r.exports, r, r.exports, n),
        r.loaded = !0,
        r.exports
    }
    var e = {};
    return n.m = t,
    n.c = e,
    n.p = "",
    n(0)
} ([function(t, n) {
    "use strict";
    function e() {
        for (var t = 0; t < P.length; t++) P[t][0](P[t][1]);
        P = [],
        y = !1
    }
    function o(t, n) {
        P.push([t, n]),
        y || (y = !0, E(e, 0))
    }
    function r(t, n) {
        function e(t) {
            a(n, t)
        }
        function o(t) {
            s(n, t)
        }
        try {
            t(e, o)
        } catch(t) {
            o(t)
        }
    }
    function i(t) {
        var n = t.owner,
        e = n._state,
        o = n._data,
        r = t[e],
        i = t.then;
        if ("function" == typeof r) {
            e = w;
            try {
                o = r(o)
            } catch(t) {
                s(i, t)
            }
        }
        c(i, o) || (e === w && a(i, o), e === v && s(i, o))
    }
    function c(t, n) {
        var e;
        try {
            if (t === n) throw new TypeError("A promises callback cannot return that same promise.");
            if (n && ("function" == typeof n || "object" == typeof n)) {
                var o = n.then;
                if ("function" == typeof o) return o.call(n,
                function(o) {
                    e || (e = !0, n === o ? u(t, o) : a(t, o))
                },
                function(n) {
                    e || (e = !0, s(t, n))
                }),
                !0
            }
        } catch(n) {
            return e || s(t, n),
            !0
        }
        return ! 1
    }
    function a(t, n) {
        t !== n && c(t, n) || u(t, n)
    }
    function u(t, n) {
        t._state === _ && (t._state = m, t._data = n, o(h, t))
    }
    function s(t, n) {
        t._state === _ && (t._state = m, t._data = n, o(l, t))
    }
    function f(t) {
        t._then = t._then.forEach(i)
    }
    function h(t) {
        t._state = w,
        f(t)
    }
    function l(t) {
        t._state = v,
        f(t),
        !t._handled && x && process.emit("unhandledRejection", t._data, t)
    }
    function d(t) {
        process.emit("rejectionHandled", t)
    }
    function p(t) {
        if ("function" != typeof t) throw new TypeError("Promise resolver " + t + " is not a function");
        if (this instanceof p == !1) throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.");
        this._then = [],
        r(t, this)
    }
    var y, _ = "pending",
    m = "settled",
    w = "fulfilled",
    v = "rejected",
    j = function() {},
    x = "undefined" != typeof process && "function" == typeof process.emit,
    E = "undefined" == typeof setImmediate ? setTimeout: setImmediate,
    P = [];
    p.prototype = {
        constructor: p,
        _state: _,
        _then: null,
        _data: void 0,
        _handled: !1,
        then: function(t, n) {
            var e = {
                owner: this,
                then: new this.constructor(j),
                fulfilled: t,
                rejected: n
            };
            return ! n && !t || this._handled || (this._handled = !0, this._state === v && x && o(d, this)),
            this._state === w || this._state === v ? o(i, e) : this._then.push(e),
            e.then
        },
        catch: function(t) {
            return this.then(null, t)
        }
    },
    p.all = function(t) {
        if (!Array.isArray(t)) throw new TypeError("You must pass an array to Promise.all().");
        return new p(function(n, e) {
            function o(t) {
                return c++,
                function(e) {
                    i[t] = e,
                    --c || n(i)
                }
            }
            for (var r, i = [], c = 0, a = 0; a < t.length; a++) r = t[a],
            r && "function" == typeof r.then ? r.then(o(a), e) : i[a] = r;
            c || n(i)
        })
    },
    p.race = function(t) {
        if (!Array.isArray(t)) throw new TypeError("You must pass an array to Promise.race().");
        return new p(function(n, e) {
            for (var o, r = 0; r < t.length; r++) o = t[r],
            o && "function" == typeof o.then ? o.then(n, e) : n(o)
        })
    },
    p.resolve = function(t) {
        return t && "object" == typeof t && t.constructor === p ? t: new p(function(n) {
            n(t)
        })
    },
    p.reject = function(t) {
        return new p(function(n, e) {
            e(t)
        })
    },
    t.exports = p
}]);